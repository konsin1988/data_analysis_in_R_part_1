result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[nrow(result),]
}
get_df_adj(3, l1, df)
get_df_adj(4, l1, df)
df_IV <- data.frame(combn(list, x), drop=F)
get_df_adj <- function(x, list, df) {
df_IV <- data.frame(combn(list, x), drop=F)
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = ' '))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[nrow(result),]
}
get_df_adj(4, l1, df)
get_df_adj <- function(x, list, df) {
df_IV <- data.frame(combn(list, x))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = ' '))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[nrow(result),]
}
get_df_adj(4, l1, df)
all_combinations <- lapply(1:length(list_IV), function(x) get_df_with_names(x, list_IV, df))
all_combinations
get_df_adj <- function(x, list, df) {
df_IV <- data.frame(combn(list, x))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = ' '))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
# result[nrow(result),]
}
get_df_adj(4, l1, df)
get_df_adj <- function(x, list, df) {
df_IV <- data.frame(combn(list, x))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = ' '))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
# result[nrow(result),]
result
}
get_df_adj(4, l1, df)
get_df_adj(1, l1, df)
get_df_adj(3, l1, df)
get_df_adj(4, l1, df)
all_combinations <- lapply(1:length(list_IV), function(x) get_df_with_names(x, list_IV, df))
all_combinations
get_df_adj <- function(x, list, df) {
df_IV <- data.frame(combn(list, x))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = ' '))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[-c(1:nrow(result)),]
# result
}
get_df_adj(4, l1, df)
get_df_adj <- function(x, list, df) {
df_IV <- data.frame(combn(list, x))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = ' '))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[-c(1:nrow(result)-1),]
# result
}
get_df_adj(4, l1, df)
all_combinations <- lapply(1:length(list_IV), function(x) get_df_with_names(x, list_IV, df))
all_combinations
all_combinations <- lapply(1:length(list_IV), function(x) get_df_adj(x, list_IV, df))
all_combinations
get_df_adj <- function(x, list, df) {
df_IV <- data.frame(combn(list, x, drop=F))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = ' '))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[-c(1:nrow(result)-1),]
# result
}
get_df_adj(4, l1, df)
all_combinations <- lapply(1:length(list_IV), function(x) get_df_adj(x, list_IV, df))
all_combinations
all_combinations
list_IV
is.numeric(df)
lapply(df, function(x) is.numeric(x))
df[,lapply(df, function(x) is.numeric(x))]
df[,sapply(df, function(x) is.numeric(x))]
df_copy <- as.character(df['drat'])
df_copy
all_combinations <- lapply(1:length(list_IV), function(x) get_df_adj(x, list_IV, df))
all_combinations
all_combinations <- sapply(1:length(list_IV), function(x) get_df_adj(x, list_IV, df))
all_combinations
all_combinations <- tapply(1:length(list_IV), function(x) get_df_adj(x, list_IV, df))
all_combinations <- apply(1:length(list_IV), function(x) get_df_adj(x, list_IV, df))
all_combinations <- apply(1:length(list_IV), FUN = function(x) get_df_adj(x, list_IV, df))
all_combinations <- lapply(1:length(list_IV), FUN = function(x) get_df_adj(x, list_IV, df))
all_combinations
get_df_adj(4, l1, df)
get_df_adj <- function(x, list, df) {
df_IV <- data.frame(combn(list, x, drop=F))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = ' '))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
as.data.frame(result[-c(1:nrow(result)-1),])
# result
}
get_df_adj(4, l1, df)
get_df_adj(3, l1, df)
get_df_adj(2, l1, df)
df_IV <- data.frame(combn(list, x, drop=F))
get_df_adj <- function(x, list, df) {
df_IV <- data.frame(combn(list, x, drop=T))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = ' '))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
as.data.frame(result[-c(1:nrow(result)-1),])
# result
}
get_df_adj(2, l1, df)
get_df_adj(4, l1, df)
result[-c(1:nrow(result)-1),]
get_df_adj(4, l1, df)
get_df_adj <- function(x, list, df) {
df_IV <- data.frame(combn(list, x, drop=T))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = ' '))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[-c(1:nrow(result)-1),]
# result
}
get_df_adj(4, l1, df)
combn(list_IV, 4)
as.data.frame(combn(list_IV, 4))
get_df_adj <- function(x, list, df) {
df_IV <- as.data.frame(combn(list, x, drop=T))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = ' '))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[-c(1:nrow(result)-1),]
# result
}
get_df_adj(4, l1, df)
get_df_adj(3, l1, df)
get_df_adj(2, l1, df)
get_df_adj <- function(x, list, df) {
df_IV <- as.data.frame(combn(list, x, drop=T))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = '_'))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[-c(1:nrow(result)-1),]
# result
}
get_df_adj(2, l1, df)
get_df_adj <- function(x, list, df) {
df_IV <- as.data.frame(combn(list, x, drop=T))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = '+'))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[-c(1:nrow(result)-1),]
# result
}
get_df_adj(2, l1, df)
as.data.frame(combn(list_IV, 4))
as.data.frame(combn(list_IV, 3))
get_df_adj <- function(x, list, df) {
df_IV <- as.data.frame(combn(list, x))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = '+'))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[-c(1:nrow(result)-1),]
# result
}
get_df_adj(2, l1, df)
get_df_adj(4, l1, df)
get_df_adj(3, l1, df)
as.data.frame(combn(list_IV, 4))
combn(list, x, FUN = function(x) paste(x, collapse = '+'))
combn(list_IV, 4, FUN = function(x) paste(x, collapse = '+'))
name <- combn(list_IV, 4, FUN = function(x) paste(x, collapse = '+'))
data_4 <- as.data.frame(combn(list_IV, 4))
names(data_4)
names(data_4) <- name
names(data_4)
rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
rbind(data_4, lapply(data_4, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
data_4 <- rbind(data_4, lapply(data_4, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
data_4
data_4[-c(1:nrow(data_4)-1),]
data_4[[-c(1:nrow(data_4)-1),]]
data_4[[-c(1:nrow(data_4)-1)],]
data_4[-c(1:nrow(data_4)-1)]
data_4[-c(1:nrow(data_4)-1),]
as.data.frame(data_4[-c(1:nrow(data_4)-1), ])
data.frame(data_4[-c(1:nrow(data_4)-1), ])
data_4[-c(1:nrow(data_4)-1), ]
data_4
library(dplyr)
data_4 %>%
select(-c(1:nrow(data_4)-1))
data_4 %>%
select(-c(1:nrow(data_4)-1),)
df
df %>%
select_if(is.numeric())
df %>%
select_if(is.numeric(.))
df %>%
df %>%
select_if(is.numeric
)
df %>%
select_if(is.numeric)
get_df_adj(3, l1, df)
data_4 %>%
select(-c(1:nrow(data_4)-1),)
data_4 %>%
filter(-c(1:nrow(data_4)-1),)
data_4
data_4
data_4[nrow(data_4),]
get_df_adj <- function(x, list, df) {
df_IV <- as.data.frame(combn(list, x))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = '+'))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result[nrow(result),]
# result
}
get_df_adj(3, l1, df)
get_df_adj(2, l1, df)
get_df_adj(1, l1, df)
data_4[nrow(data_4),]
data_4[][nrow(data_4)]
data_4 %>%
slice(-c(1:nrow(data_4)))
data_4 %>%
slice(-c(1:nrow(data_4)-1))
get_df_adj <- function(x, list, df) {
df_IV <- as.data.frame(combn(list, x))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = '+'))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result %>%
slice(-c(1:nrow(result)-1))
# result
}
get_df_adj(1, l1, df)
get_df_adj(4, l1, df)
# get_max_adj.r.sqr <- function(df) {
#   library(dplyr)
#   df <- df %>%
#     select_if(is.numeric)
#
#
# }
list_IV <- names(df[,c(2:length(df))])
get_df_adj(4, l1, df)
get_df_adj <- function(x, list, df) {
library(dplyr)
df_IV <- as.data.frame(combn(list, x))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = '+'))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result %>%
slice(-c(1:nrow(result)-1))
# result
}
get_df_adj(4, l1, df)
get_df_adj(4, l1, df)
get_df_adj(2, l1, df)
get_df_adj(3, l1, df)
all_combinations <- lapply(1:length(list_IV), FUN = function(x) get_df_adj(x, list_IV, df))
all_combinations
get_df_adj(3, l1, df)
df_2 <- get_df_adj(2, l1, df)
df_3 <- get_df_adj(3, l1, df)
df_2
df_3
cbind(df_2, df_3)
df_all <- cbind(df_2, df_3)
df_all
which.max(df_all)
df_all %>%
select(which.max(df_all))
all_combinations <- sapply(1:length(list_IV), FUN = function(x) get_df_adj(x, list_IV, df))
all_combinations
all_combinations <- lapply(1:length(list_IV), FUN = function(x) get_df_adj(x, list_IV, df))
all_combinations
df_result <- data.frame()
df_result
lapply(all_combinations, function(x) cbind(df_result, x))
all_combinations
df_result <- data.frame(row.names = 1)
lapply(all_combinations, function(x) cbind(df_result, x))
df_result
lapply(all_combinations, function(x) cbind(df_result, x))
df_result
lapply(all_combinations, function(x) length(x))
all_combinations <-
lapply(1:length(list_IV), FUN = function(x) get_df_adj(x, list_IV, df))
all_combinations <-
lapply(1:length(list_IV), FUN = function(x) cbind(df_result, get_df_adj(x, list_IV, df)))
all_combinations
df_result
all_combinations <-
lapply(1:length(list_IV), FUN = function(x) get_df_adj(x, list_IV, df))
all_combinations
lapply(all_combinations, function(x) cbind(df_result, as.data.frame(x)))
df_result
lapply(all_combinations, function(x) cbind(df_result, x[1]))
all_combinations
df_result
lapply(all_combinations, function(x) cbind(x, df_result))
df_result
cbind(df_result, all_combinations[1])
cbind(df_result, all_combinations[1:4])
df_result
df_result <- cbind(df_result, all_combinations[1:4])
df_result
df_result <- data.frame(row.names = 1)
df_result <- data.frame(row.names = 1)
df_result
df_result <- cbind(df_result, all_combinations[1:4])
df_result
length(df_result)
df_result <- data.frame(row.names = 1)
length(df_result)
df_result <- cbind(df_result, all_combinations[1:length(all_combinations)])
length(df_result)
df_result
df_result <- cbind(all_combinations[1:length(all_combinations)])
df_result
df_result <- cbind(all_combinations[1:length(all_combinations)])
df_result
df_result <- data.frame(row.names = 1)
df_result <- cbind(df_result, all_combinations[1:length(all_combinations)])
df_result
df_result
get_max_adj.r.sqr <- function(df) {
library(dplyr)
df <- df %>%
select_if(is.numeric)
list_IV <- names(df[,c(2:length(df))])
df_result <- data.frame(row.names = 1)
list_all_vars <-
lapply(1:length(list_IV), FUN = function(x) get_df_adj(x, list_IV, df))
df_result <- cbind(df_result, list_all_vars[1:length(list_all_vars)])
df_result %>%
select(which.max(df_result))
}
get_df_adj <- function(x, list, df) {
df_IV <- as.data.frame(combn(list, x))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = '+'))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result %>%
slice(-c(1:nrow(result)-1))
# result
}
rm(list=ls())
# ----------------------------------------------------
df <- mtcars %>% select(wt, mpg, disp, drat, hp)
# ----------------------------------------------------
mtcars
df <- mtcars %>% select(wt, mpg, disp, drat, hp)
# ----------------------------------------------------
library(dplyr)
df <- mtcars %>% select(wt, mpg, disp, drat, hp)
get_df_adj <- function(x, list, df) {
df_IV <- as.data.frame(combn(list, x))
names(df_IV) <- combn(list, x, FUN = function(x) paste(x, collapse = '+'))
result <- rbind(df_IV, lapply(df_IV, FUN =
function(x) round(summary(lm(data=df[c('wt', x)]))$adj.r.squared, 3)))
result %>%
slice(-c(1:nrow(result)-1))
}
get_max_adj.r.sqr <- function(df) {
library(dplyr)
df <- df %>%
select_if(is.numeric)
list_IV <- names(df[,c(2:length(df))])
df_result <- data.frame(row.names = 1)
list_all_vars <-
lapply(1:length(list_IV), FUN = function(x) get_df_adj(x, list_IV, df))
df_result <- cbind(df_result, list_all_vars[1:length(list_all_vars)])
df_result %>%
select(which.max(df_result))
}
get_max_adj.r.sqr(df)
df <- attitude
df
lm(rating ~ complaints*critical, df)
fit <- lm(rating ~ complaints*critical, df)
summary(fit)
swiss
df <- swiss
df$religious <- ifelse(df$Catholic > 60, 'Lots', 'Few')
df$religious
typeof(df$religious)
df$religious <- factor(ifelse(df$Catholic > 60, 'Lots', 'Few'), labels = c('Lots', 'Few')
df$religious <- factor(ifelse(df$Catholic > 60, 'Lots', 'Few'), labels = c('Lots', 'Few'))
df$religious <- factor(ifelse(df$Catholic > 60, 'Lots', 'Few'), labels = c('Lots', 'Few'))
str(df)
fit_religious <- lm(Fertility ~ Examination + religious, df)
summary(fit_religious)
df$religious <- as.factor(ifelse(df$Catholic > 60, 'Lots', 'Few'))
str(df)
fit_religious <- lm(Fertility ~ Examination + religious, df)
summary(fit_religious)
# -----------------------------------------------
# Multiple regression with cathegorical variable and with
# interaction with variables
fit_religious_int <- lm(Fertility ~ Examination * religious, df)
summary(fit_religious_int)
summary(fit_religious)
summary(fit_religious_int)
df$religious <- as.factor(ifelse(df$Catholic > 60, 'Lots', 'Few'))
str(df)
fit_religious <- lm(Fertility ~ Examination + religious, df)
summary(fit_religious)
# -----------------------------------------------
# Multiple regression with cathegorical variable and with
# interaction with variables
fit_religious_int <- lm(Fertility ~ Examination * religious, df)
summary(fit_religious_int)
df <- swiss
df$religious <- as.factor(ifelse(df$Catholic > 70, 'Lots',
(ifelse(df$Catholic > 40, 'Middle', 'Few'))))
str(df)
fit_religious <- lm(Fertility ~ Examination + religious, df)
summary(fit_religious)
plot(df$religious)
df$religious <- as.factor(ifelse(df$Catholic > 70, 'Lots',
(ifelse(df$Catholic > 30, 'Middle', 'Few'))))
plot(df$religious)
df$religious <- as.factor(ifelse(df$Catholic > 70, 'Lots',
(ifelse(df$Catholic > 30, 'Middle', 'Few'))))
str(df)
plot(df$religious)
df$religious <- as.factor(ifelse(df$Catholic > 70, 'Lots',
(ifelse(df$Catholic > 20, 'Middle', 'Few'))))
plot(df$religious)
df$religious <- as.factor(ifelse(df$Catholic > 70, 'Lots',
(ifelse(df$Catholic > 10, 'Middle', 'Few'))))
plot(df$religious)
fit_religious <- lm(Fertility ~ Examination + religious, df)
summary(fit_religious)
# -------------------------------------------------------
# Graphics
library(ggplot2)
ggplot(swiss)+
aes(x = Examination, y = Fertility)+
geom_point()
ggplot(swiss)+
aes(x = Examination, y = Fertility)+
geom_point()+
geom_smooth(method='lm')
ggplot(df)+
aes(x = Examination, y = Fertility, col=religious)+
geom_point()+
geom_smooth(method='lm')
df$religious <- as.factor(ifelse(df$Catholic > 60, 'Lots', 'Few'))
ggplot(df)+
aes(x = Examination, y = Fertility, col=religious)+
geom_point()+
geom_smooth(method='lm')
ggplot(df, aes(x = Examination, y = Fertility, col=religious))+
geom_point()+
geom_smooth(method='lm')
ggplot(df, aes(x = Examination, y = Fertility, col=religious))+
geom_point()+
ggplot(df, aes(x = Examination, y = Fertility, col=religious))+
geom_point()
ggplot(df, aes(x = Examination, y = Fertility, col=religious))+
geom_point()
geom_smooth()
ggplot(df, aes(x = Examination, y = Fertility, col=religious))+
geom_point()
ggplot(df, aes(x = Examination, y = Fertility, col=religious))+
geom_point()+
geom_smooth()
ggplot(df, aes(x = Examination, y = Fertility, col=religious))+
geom_point()+
geom_smooth(method='lm')
# -----------------------------------------------------
# multiple regression with one categorical and 2 numeric predictors
fit_mult_2_numeric <- lm(Firtility ~ religious*Infant.Mortality*Examination, df)
# -----------------------------------------------------
# multiple regression with one categorical and 2 numeric predictors
fit_mult_2_numeric <- lm(Fertility ~ religious*Infant.Mortality*Examination, df)
summary(fit_mult_2_numeric)
# -------------------------TASKS------------------------------
df_cars <- mtcars
fit_task_1 <- lm(mpg ~ am*wt, df_cars)
summary(fit_task_1)
fit_task_1
summary(fit_task_1)
str(df_cars)
df_cars$am <- factor(df_cars$am, labels = c('Auto', 'Manual'))
str(df_cars)
fit_task_1 <- lm(mpg ~ am*wt, df_cars)
summary(fit_task_1)
ggplot(df_cars)+
aes(x = wt, y = mpg, color = am)
ggplot(df_cars)+
aes(x = wt, y = mpg, color = am)
ggplot(df_cars)+
aes(x = wt, y = mpg, color = am)+
geom_smooth(method='lm')
