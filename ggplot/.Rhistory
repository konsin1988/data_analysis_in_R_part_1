# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(bins = 20, col='black', fill='purple')
# -------------------------------------------
# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(bins = 20, col='black', fill='blue')
# -------------------------------------------
# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(bins = 20, col='black', fill='blue', alpha=0.5)
# -------------------------------------------
# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(bins = 20, col='black', fill='blue', alpha=0.4)
# -------------------------------------------
# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(bins = 20, col='black', fill='purple', alpha=0.4)
# -------------------------------------------
# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(bins = 20, col='black', fill='purple', alpha=0.4, binwidth=1)
# -------------------------------------------
# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(bins = 20, col='black', fill='purple', alpha=0.4, binwidth=2)
# -------------------------------------------
# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(bins = 20, col='black', fill='purple', alpha=0.4, binwidth=1)
# -------------------------------------------
# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(col='black', fill='purple', alpha=0.4, binwidth=0.5)
# -------------------------------------------
# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(col='black', fill='purple', alpha=0.4, binwidth=3)
# -------------------------------------------
# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(col='black', fill='purple', alpha=0.4, binwidth=1.5)
# -------------------------------------------
# GGPLOT
ggplot(cars, aes(x = mpg))+
geom_histogram(col='black', fill='purple', alpha=0.4, binwidth=1)
# Dotplot
ggplot(cars, aex(x = mpg))+
geom_dotplot()
# Dotplot
ggplot(cars, aex(x = mpg))+
geom_dotplot()
# Dotplot
ggplot(cars, aes(x = mpg))+
geom_dotplot()
# Density
ggplot(cars, aes(x=mpg))+
geom_density()
# Density
ggplot(cars, aes(x=mpg))+
geom_density(fill='blue', alpha=0.5)
# Density
ggplot(cars, aes(x=mpg))+
geom_density(fill='blue', alpha=0.5, col='white')
# Density
ggplot(cars, aes(x=mpg))+
geom_density(fill='blue', alpha=0.5, col='grey')
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot()
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot( binwidth=2)
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot( binwidth=1)
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot( binwidth=1, col=c('red', 'blue'))
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot( binwidth=1, colours=c('red', 'blue'))
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot( binwidth=1, colour=c('red', 'blue'))
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot( binwidth=1, col=c('red', 'blue'))
geom_dotplot( binwidth=1, col='red'
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot( binwidth=1, col='red')
# Dotplot
ggplot(cars, aes(x = mpg, col=am))+
geom_dotplot( binwidth=1)
# Dotplot
ggplot(cars, aes(x = mpg, col=am))+
geom_dotplot( binwidth=1, fill='wheat')
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot( binwidth=1, fill=c('wheat', 'blue'))
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot( binwidth=1)
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot(binwidth=1)
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot(binwidth=1, fill='blue')
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot(binwidth=1, fill='blue', 'wheat')
# Dotplot
ggplot(cars, aes(x = mpg, fill=am))+
geom_dotplot(binwidth=1, fill=c('blue', 'wheat'))
# Dotplot
ggplot(cars, aes(x = mpg, colors=am))+
geom_dotplot(binwidth=1, fill='wheat')
# Dotplot
ggplot(cars, aes(x = mpg, colors=am))+
geom_dotplot(binwidth=1, fill='wheat')
# Dotplot
ggplot(cars, aes(x = mpg, col=am))+
geom_dotplot(binwidth=1, fill='wheat', col=c('red', 'blue'))
# Dotplot
ggplot(cars, aes(x = mpg, col=am))+
geom_dotplot(binwidth=1, fill='wheat', col=c('red', 'blue'))
# Dotplot
ggplot(cars, aes(x = mpg, col=am))+
geom_dotplot(binwidth=1, fill='wheat')
# Dotplot
ggplot(cars, aes(x = mpg, col=am))+
geom_dotplot(binwidth=1, fill='white')
# Dotplot
ggplot(cars, aes(x = mpg, col=am))+
geom_dotplot(binwidth=1, fill='white', col=c('red', 'green'))
# Dotplot
ggplot(cars, aes(x = mpg, col=am))+
geom_dotplot(binwidth=1, fill='white')
# Density
ggplot(cars, aes(x=mpg, fill=am))+
geom_density(alpha=0.5, col='grey')
# Density
ggplot(cars, aes(x=mpg, fill=am))+
geom_density(alpha=0.5, col='grey', fill='red')
# Density
ggplot(cars, aes(x=mpg, fill=am))+
geom_density(alpha=0.5, col='grey', fill='red', 'green')
# Density
ggplot(cars, aes(x=mpg, fill=am))+
geom_density(alpha=0.5, col='grey', fill=c('red', 'green'))
# Density
ggplot(cars, aes(x=mpg, fill=am))+
geom_density(alpha=0.5, col='grey')
#Boxplot
ggplot(cars, aes(x=am, y=hg))+
boxplot()
#Boxplot
ggplot(cars, aes(x=am, y=hg))+
geom_boxplot()
#Boxplot
ggplot(cars, aes(x=am, y=hg))+
geom_boxplot()
#Boxplot
ggplot(cars, aes(x=am, y=hp))+
geom_boxplot()
#Boxplot
ggplot(cars, aes(x=am, y=hp, fill=am))+
geom_boxplot()
#Boxplot
ggplot(cars, aes(x=am, y=hp, fill=am))+
geom_boxplot(col='grey')
#Boxplot
ggplot(cars, aes(x=am, y=hp, fill=am))+
geom_boxplot(col='blue')
#Boxplot
ggplot(cars, aes(x=am, y=hp, fill=am))+
geom_boxplot()
#Boxplot
ggplot(cars, aes(x=am, y=hp, fill=vs))+
geom_boxplot()
#Boxplot
ggplot(cars, aes(x=am, y=mpg, fill=vs))+
geom_boxplot()
#Boxplot
ggplot(cars, aes(x=am, y=mpg, fill=vs))+
geom_boxplot(xlab='ma')
#Boxplot
ggplot(cars, aes(x=am, y=mpg, fill=vs))+
geom_boxplot(xlabel='ma')
# Geom_point
ggplot(cars, aes(x=mpg, y=hp))+
geom_point()
# Geom_point
ggplot(cars, aes(x=mpg, y=hp))+
geom_point(size=6)
# Geom_point
ggplot(cars, aes(x=mpg, y=hp))+
geom_point(size=5)
# Geom_point
ggplot(cars, aes(x=mpg, y=hp))+
geom_point(size=3)
# Geom_point
ggplot(cars, aes(x=mpg, y=hp, fill=am))+
geom_point(size=3)
# Geom_point
ggplot(cars, aes(x=mpg, y=hp, fill=am))+
geom_point(size=3, fill=c('green', 'red'))
# Geom_point
ggplot(cars, aes(x=mpg, y=hp, fill=am))+
geom_point(size=3, fill=c('green', 'red'))
# Geom_point
ggplot(cars, aes(x=mpg, y=hp, fill=am))+
geom_point(size=3, fill='blue')
# Geom_point
ggplot(cars, aes(x=mpg, y=hp, fill=am))+
geom_point(size=3, col='blue')
# Geom_point
ggplot(cars, aes(x=mpg, y=hp, col=am))+
geom_point(size=3)
# Geom_point
ggplot(cars, aes(x=mpg, y=hp, col=am))+
geom_point(size=3)
# Geom_point
ggplot(cars, aes(x=mpg, y=hp, col=am, size=qsec))+
geom_point(size=3)
# Geom_point
ggplot(cars, aes(x=mpg, y=hp, col=am, size=qsec))+
geom_point()
# Geom_point
ggplot(cars, aes(x=mpg, y=hp, col=am, size=qsec))+
geom_point()
# Work with variables
my_boxplot <- ggplot(cars, aes(x=am, y=mpg, fill=vs))+
geom_boxplot()
my_boxplot
# Work with part of graphic design in variable
my_density_plot <- ggplot(cars, aes(x=mpg, fill=am))
my_density_plot + geom_density()
my_density_plot + geom_density(alpha=0.5)
# Dotplot
ggplot(cars, aes(x = mpg, col=am))+
geom_dotplot(binwidth=1, fill='white')+
xlab('Mpg')+
ggtitle('Dotplot')
# Dotplot
ggplot(cars, aes(x = mpg, col=am))+
geom_dotplot(binwidth=1, fill='white')+
xlab('Mpg')+
ggtitle('Dotplot', fontweight='bold')
# Dotplot
ggplot(cars, aes(x = mpg, col=am))+
geom_dotplot(binwidth=1, fill='white')+
xlab('Mpg')+
ggtitle('Dotplot')
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot()+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+
ggtitle("MPG dotplot")
df <- mtcars
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot()+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+
ggtitle("MPG dotplot")
df$am <- factor(df$am, labels=c('Auto', 'Manual'))
df$vs <- factor(df$vs, labels=c('V', 'S'))
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot()+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+
ggtitle("MPG dotplot")
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot(binwidth = 20)+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+
ggtitle("MPG dotplot")
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot(binwidth = 2)+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+
ggtitle("MPG dotplot")
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot(binwidth = 1)+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+
ggtitle("MPG dotplot")
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot(binwidth = 1)+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+ #Title of the legend
ggtitle("MPG dotplot")
ggplot(df, aes(x = mpg, fill = am))+
geom_dotplot(binwidth = 1)+
xlab("Miles/(US) gallon")+
ylab("Count")+
scale_fill_discrete(name="Transmission type")+       #Title of the legend
ggtitle("MPG dotplot")
ggplot(df, aes(x = mpg, y = hp, size = qsec))+
geom_point()+
xlab("Miles/(US) gallon")+
ylab("Gross horsepower")+
scale_size_continuous(name="1/4 mile time")+
ggtitle("Miles/(US) gallon and Gross horsepower")
library(ggplot2)
airq<- airquality
names(airq)
str(airq)
unique(airq$Month)
str(airq)
airq$Month <- factor(airq$Month, labels=unique(airq$Month))
str(airq)
ggplot(airq, aes=(x=Month, y = Ozone))+
ggplot(airq, aes(x=Month, y = Ozone))+
geom_boxplot()
# При помощи функции ggplot() или boxplot()
# постройте график boxplot, используя встроенные
# в R данные airquality. По оси x отложите номер
# месяца, по оси y — значения переменной Ozone.
# На графике boxplot отдельными точками отображаются
# наблюдения, отклоняющиеся от 1 или 3 квартиля больше
# чем на полтора межквартильных размаха. Сколько таких
# наблюдений присутствует в сентябре (месяц №9)?
# Обратите внимание, что для корректного отображения
# графика ggplot ожидает факторную переменную по оси x.
ggplot(airq, aes(x=Month, y = Ozone))+
geom_boxplot()
# в R данные airquality. По оси x отложите номер
# месяца, по оси y — значения переменной Ozone.
# На графике boxplot отдельными точками отображаются
# наблюдения, отклоняющиеся от 1 или 3 квартиля больше
# чем на полтора межквартильных размаха. Сколько таких
# наблюдений присутствует в сентябре (месяц №9)?
# Обратите внимание, что для корректного отображения
# графика ggplot ожидает факторную переменную по оси x.
#
# Comment multiple lines = Ctrl + Shift + C )))))
ggplot(airq, aes(x=Month, y = Ozone))+
geom_boxplot()
# Нужно построить scatterplot с помощью ggplot из ggplot2,
# по оси x которого будет mpg, по оси
# y - disp, а цветом отобразить переменную (hp).
cars <- mtcars
str(cars)
ggplot(cars, aes(x = mpg, y = disp, col = hp))+
geom_point()
# Укажите, при помощи какого варианта
# кода мы можем построить следующий
# график по данным iris:
# Гистограмма распределения переменной
# Sepal.Length, в которой цвет заполнения столбцов
# гистограммы зависит от значения переменной Species.
df_i <- iris
str(df_i)
ggplot(iris, aes(x = Sepal.Length, fill=Species))+
geom_boxplot()
ggplot(iris, aes(x = Sepal.Length, fill=Species))+
geom_histogram()
ggplot(iris, aes(x = Sepal.Length, fill=Species))+
geom_histogram(binwidth=1)
ggplot(iris, aes(x = Sepal.Length, fill=Species))+
geom_histogram(binwidth=0.1)
# Scatterplot (диаграмма рассеивания), где по оси X
# будет отложена переменная Sepal.Length,  по оси Y
# переменная  Sepal.Width. За цвет точек будет отвечать
# переменная  Species, а за размер точек переменная Petal.Length.
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species, size = Petal.Length)) +
geom_point()
# Scatterplot (диаграмма рассеивания), где по оси X
# будет отложена переменная Sepal.Length,  по оси Y
# переменная  Sepal.Width. За цвет точек будет отвечать
# переменная  Species, а за размер точек переменная Petal.Length.
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species, size = Petal.Length)) +
geom_point()+
scale_fill_discrete("Species of plants")
# Scatterplot (диаграмма рассеивания), где по оси X
# будет отложена переменная Sepal.Length,  по оси Y
# переменная  Sepal.Width. За цвет точек будет отвечать
# переменная  Species, а за размер точек переменная Petal.Length.
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species, size = Petal.Length)) +
geom_point()+
scale_fill_discrete("Species of plants")+
scale_size_continuous("Length")
# Scatterplot (диаграмма рассеивания), где по оси X
# будет отложена переменная Sepal.Length,  по оси Y
# переменная  Sepal.Width. За цвет точек будет отвечать
# переменная  Species, а за размер точек переменная Petal.Length.
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species, size = Petal.Length)) +
geom_point()+
scale_fill_continuous("Species of plants")+
scale_size_continuous("Length")
# Scatterplot (диаграмма рассеивания), где по оси X
# будет отложена переменная Sepal.Length,  по оси Y
# переменная  Sepal.Width. За цвет точек будет отвечать
# переменная  Species, а за размер точек переменная Petal.Length.
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, col=Species, size = Petal.Length)) +
geom_point()+
scale_size_continuous("Length")
load(file = '../save_data/my_vars.Rdata')
View(my_var)
my_var
View(df)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1 )+
geom_density(aes(x = mpg), col = 'red')
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1 )+
geom_density(aes(x = mpg), col = 'red')
library(ggplot2)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1 )+
geom_density(aes(x = mpg), col = 'red')
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 2 )+
geom_density(aes(x = mpg), col = 'red')
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5 )+
geom_density(aes(x = mpg), col = 'red')
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5 )+
geom_density(aes(x = mpg), col = 'red')+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5 )+
geom_density(aes(x = mpg), col = 'red', size=2)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5 )+
geom_density(aes(x = mpg), col = 'red', size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5 )+
geom_density(aes(x = mpg), col = 'red', size=1.5, alpha=0.6)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5 )+
geom_density(aes(x = mpg), col = 'red', size=1.5, alpha=0.4)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5 )+
geom_density(aes(x = mpg), col = 'red', size=1.5, alpha=0.4)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5 )+
geom_density(aes(x = mpg), col = 'red', size=1.5, alpha=0.3)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='yellow', alpha=0.5 )+
geom_density(aes(x = mpg), col = 'red', size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='purple', alpha=0.4 )+
geom_density(aes(x = mpg), col = 'red', size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='purple', alpha=0.4 )+
geom_density(aes(x = mpg), col = 'red', fill='lightblue', size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='purple', alpha=0.4 )+
geom_density(aes(x = mpg), col = 'red', fill='lightblue', alpha=0.2, size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='purple', alpha=0.4 )+
geom_density(aes(x = mpg), col = 'red', fill='lightblue', alpha=0.4, size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='purple', alpha=0.4 )+
geom_density(aes(x = mpg), col = 'red', fill='lightblue', alpha=0.5, size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='purple', alpha=0.4 )+
geom_density(aes(x = mpg), col = 'red', fill='lightblue', alpha=0.5, size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)+
scale_color_gray()
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='purple', alpha=0.4 )+
geom_density(aes(x = mpg), col = 'red', fill='lightblue', alpha=0.5, size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)+
scale_color_gray()
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='purple', alpha=0.4 )+
geom_density(aes(x = mpg), col = 'red', fill='lightblue', alpha=0.5, size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)+
scale_color_grey()
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='purple', alpha=0.4 )+
geom_density(aes(x = mpg), col = 'red', fill='lightblue', alpha=0.5, size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='purple', alpha=0.4 )+
geom_density(aes(x = mpg), col = 'red', fill='lightblue', alpha=0.5, size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)+
geom_vline(aes(xintercept = grp.mean, col=green))
ggplot(df)+
geom_histogram(aes(x = mpg, y = ..density..), binwidth = 1.5, fill='purple', alpha=0.4 )+
geom_density(aes(x = mpg), col = 'red', fill='lightblue', alpha=0.5, size=1.5)+
geom_vline(aes(xintercept = mean(mpg)), col='blue', linetype='dashed', size=1)
