geom_vline(data = df_counts, aes(xintercept = count))+
facet_grid(Species ~ .)
ggplot(sub_df)+
aes(x = Sepal.Width, fill=Species, col=Species)+
geom_density(alpha=0.5)+
scale_fill_manual(values=c('red', 'Lightblue'))+
scale_color_manual(values=c('black', 'white'))+
geom_vline(data = sub_df, aes(xintercept = mean(Sepal.Width)))+
facet_grid(Species ~ .)
ggplot(sub_df)+
aes(x = Sepal.Width, fill=Species, col=Species)+
geom_density(alpha=0.5)+
scale_fill_manual(values=c('red', 'Lightblue'))+
scale_color_manual(values=c('black', 'white'))+
geom_vline(data = sub_df, aes(xintercept = mean(Sepal.Width)),
linestile='dashed', col='green')+
facet_grid(Species ~ .)
ggplot(sub_df)+
aes(x = Sepal.Width, fill=Species, col=Species)+
geom_density(alpha=0.5)+
scale_fill_manual(values=c('red', 'Lightblue'))+
scale_color_manual(values=c('black', 'white'))+
geom_vline(data = sub_df, aes(xintercept = mean(Sepal.Width)),
linestile='dashed', col='Warmgreen')+
facet_grid(Species ~ .)
ggplot(sub_df)+
aes(x = Sepal.Width, fill=Species, col=Species)+
geom_density(alpha=0.5)+
scale_fill_manual(values=c('red', 'Lightblue'))+
scale_color_manual(values=c('black', 'white'))+
geom_vline(data = sub_df, aes(xintercept = mean(Sepal.Width)),
linestile='dashed', col='Darkgreen')+
facet_grid(Species ~ .)
ggplot(sub_df)+
aes(x = Sepal.Width, fill=Species, col=Species)+
geom_density(alpha=0.5)+
scale_fill_manual(values=c('red', 'Lightblue'))+
scale_color_manual(values=c('black', 'white'))+
geom_vline(data = sub_df, aes(xintercept = mean(Sepal.Width)),
linestile='dashed', col='Darkgreen', alpha=0.4)+
facet_grid(Species ~ .)
ggplot(sub_df)+
aes(x = Sepal.Length, fill=Species, col=Species)+
geom_density(alpha=0.5)+
geom_vline(data=sepal_length_means,
aes(xintercept=mean, color=Species), linetype='dashed', size=1)
ggplot(sub_df)+
aes(x = Sepal.Width, fill=Species, col=Species)+
geom_density(alpha=0.5)+
scale_fill_manual(values=c('red', 'Lightblue'))+
scale_color_manual(values=c('black', 'white'))+
geom_vline(data = sub_df, aes(xintercept = mean(Sepal.Width)),
linestile='dashed', col='Darkgreen', alpha=0.4)+
facet_grid(Species ~ .)
ggplot(sub_df)+
aes(x = Sepal.Width, fill=Species, col=Species)+
geom_density(alpha=0.5)+
scale_fill_manual(values=c('red', 'Lightblue'))+
scale_color_manual(values=c('black', 'white'))+
geom_vline(aes(xintercept = mean(Sepal.Width)),
linestile='dashed', col='Darkgreen', alpha=0.4)+
facet_grid(Species ~ .)
ggplot(sub_df)+
aes(x = Sepal.Width, fill=Species, col=Species)+
geom_density(alpha=0.5)+
scale_fill_manual(values=c('red', 'Lightblue'))+
scale_color_manual(values=c('black', 'white'))+
geom_vline(aes(xintercept = mean(Sepal.Width)),
linetype='dashed', col='Darkgreen', alpha=0.4)+
facet_grid(Species ~ .)
df <- mtcars
df$am <- factor(df$am, labels = c('Auto', 'Manual'))
df$vs <- factor(df$vs, labels = c('V', 'S'))
leveneTest(mpg ~ vs, df, center=mean)
# Bartlett test
bartlett.test(Sepal.Length ~ Species, df)
(df <- iris)
(sub_df <- subset(df, Species != 'setosa'))
# Bartlett test
bartlett.test(Sepal.Length ~ Species, sub_df)
(result <- leveneTest(Sepal.Length ~ Species, df, center=mean))
(result <- leveneTest(Sepal.Length ~ Species, sub_df, center=mean))
ggplot(sub_df)+
aes(x= Species, y = Sepal.Width, fill = Species)+
geom_boxplot()
ggplot(sub_df)+
aes(x= Species, y = Sepal.Length, fill = Species)+
geom_boxplot()+
geom_hline(aes(yintercept = mean(Sepal.Length)))
ggplot(sub_df)+
aes(x= Species, y = Sepal.Length, fill = Species)+
geom_boxplot()+
geom_hline(aes(yintercept = mean(Sepal.Length)), col='red', linetype='dashed', alpha=0.7)
ggplot(sub_df)+
aes(x= Species, y = Sepal.Length, fill = Species)+
geom_boxplot(col='white')+
geom_hline(aes(yintercept = mean(Sepal.Length)), col='red', linetype='dashed', alpha=0.7)
# T.test
t.test(Sepal.Length ~ Species, sub_df)
# By()
by(df$Sepal.Length, INDICES = df$Species, shapiro.test)
# By()
by(df$Sepal.Length, INDICES = df$Species, mean)
# By()
df_means <- by(df$Sepal.Length, INDICES = df$Species, mean)
?by
# By()
df_means <- by(df$Sepal.Length, INDICES = df$Species, mean, simplify = T)
# By()
(df_means <- by(df$Sepal.Length, INDICES = df$Species, mean, simplify = T))
(as.data.frame(df_means))
# By()
df_means <- by(df$Sepal.Length, INDICES = df$Species, summary, simplify = T)
(as.data.frame(df_means))
(as.data.frame(df_means))
# By()
df_means <- by(df$Sepal.Length, INDICES = df$Species, summary)
(as.data.frame(df_means))
df_means
# By()
df_means <- by(df$Sepal.Length, INDICES = df$Species, sum)
df_means
(as.data.frame(df_means))
library(ggplot2)
df <- ToothGrowth
head(df)
t.test(df %>% select('OJ'))
names(df)
df[['supp']]
t.test(df %>% select('supp'))
t.test(df %>% select(supp))
names(df)
t.test(df %>% select('supp'))
df %>% select('supp')
names(df)
df %>% select('dose')
str(df)
df$dose <- factor(df$dose, labels=c('0.5', '0.2'))
unique(df$dose)
df$dose <- factor(df$dose, labels=c('0.5', '1', '2'))
str(df)
view(df)
View(df)
?subset
subset(df, supp )
subset(df, ,supp )
subset(df,supp == 0.5)
subset(df,dose == 0.5)
subset(df,dose == 0.5 | dose == 2)
subset(df,dose == 0.5 & supp == 'OJ' | dose == 2)
subset(df,(dose == 0.5 & supp == 'OJ') | (supp == 'VC' & dose == 2))
df_sub <- subset(df,(dose == 0.5 & supp == 'OJ') | (supp == 'VC' & dose == 2))
t.test(df_sub$OJ, df_sub$VC)
df_sub
df_sub <- subset(df,(dose == 0.5 & supp == 'OJ') | (supp == 'VC' & dose == 2), -dose)
df_sub
t.test(len ~ supp, df_sub)
t.test(len ~ supp, df_sub)$statistic
# на показатель артериального давления.
#
# https://stepik.org/media/attachments/lesson/11504/lekarstva.csv﻿
#
# По всем испытуемым сравните показатель давления до начала
# лечения (Pressure_before) с показателем давления
# после лечения (Pressure_after) при помощи t - критерия
# для зависимых выборок.
#
# В поле для ответа укажите значение t - критерия.
medicine <- read.csv('../tables/lecarstva.csv')
list.files('../tables')
# на показатель артериального давления.
#
# https://stepik.org/media/attachments/lesson/11504/lekarstva.csv﻿
#
# По всем испытуемым сравните показатель давления до начала
# лечения (Pressure_before) с показателем давления
# после лечения (Pressure_after) при помощи t - критерия
# для зависимых выборок.
#
# В поле для ответа укажите значение t - критерия.
medicine <- read.csv('../tables/lekarstva.csv')
head(medicine)
medicine %>%
t.test(.$Pressure_before, .$Pressure_after, paired = T)
library(dplyr)
suppressMessages(library(dplyr))
medicine %>%
t.test(.$Pressure_before, .$Pressure_after, paired = T)
medicine %>%
t.test(Pressure_before, Pressure_after, paired = T)
str(medicine)
medicine %>%
t.test(.$Pressure_before, .$Pressure_after, paired = T)
medicine %>%
t.test(.$Pressure_before, .$Pressure_after)
t.test(medicine$Pressure_before, medicine$Pressure_after, paired = T)
t.test(medicine$Pressure_before, medicine$Pressure_after, paired = T)$statistic
library(ggplot)
library(dplyr)
library(ggplot2)
df  <- iris
df1  <- subset(df, Species != "setosa")
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange",
size = 2)
library(hmisc)
library(Hmisc)
install.packages('Hmisc')
library(Hmisc)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange",
size = 2)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
library(ggplot2)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
library(Hmisc)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange",
size = 2)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange",
size = 2)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_boxplot()
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange",
size = 2)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
geom_boxplot()+
stat_summary(fun.y = mean, geom = "point", size = 4)+
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange",
size = 2)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_boxplot()+
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "pointrange",
size = 2)
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_boxplot()
ggplot(df1, aes(Species, Sepal.Length))+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
geom_boxplot()+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar")+
# width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 6)
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(aes(yintercept = median(Sepal.Length)), color='red')
two_num <- by(Sepal.Length, INDICES = Species, median)
two_num <- by(df1$Sepal.Length, INDICES = df1$Species, median)
colnames(two_num)
colnames(two_num)
two_num
as.data.frame(two_num)
two_num <- as.data.frame(two_num)
two_num$versicolor
two_num[,'versicolor']
two_num <- by(df1$Sepal.Length, INDICES = df1$Species, median)
typeof two_num
typeof(two_num)
two_num <- by(df1$Sepal.Length, INDICES = df1$Species, median)
typeof(two_num)
as.matrix(two_num)
as.matrix(two_num).T
t(as.matrix(two_num))
two_num <- as.data.frame(two_num)
levels(df1)
levels(df1$Species)
levels(df1$Species)[levels(df1$Species) == 'setosa'] <- NA
two_num <- by(df1$Sepal.Length, INDICES = df1$Species, median)
t(as.matrix(two_num))
two_num <- t(as.matrix(two_num))
two_num <- as.data.frame(two_num)
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = median(Sepal.Length)), color='red')
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)
(two_num <- as.data.frame(two_num))
two_num <- t(as.matrix(two_num))
two_num <- by(df1$Sepal.Length, INDICES = df1$Species, median)
(two_num <- as.data.frame(two_num))
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = x), color='red')
two_num <- by(df1$Sepal.Length, INDICES = df1$Species, quantile)
two_num <- by(df1$Sepal.Length, INDICES = df1$Species, quantile(75))
two_num <- by(df1$Sepal.Length, INDICES = df1$Species, quantile(.,75))
two_num <- df1 %>%
group_by(.$Species)+
summarize(mean = mean(.$Sepal.Length))
library(dplyr)
two_num <- df1 %>%
group_by(.$Species)+
summarize(mean = mean(.$Sepal.Length))
two_num <- df1 %>%
group_by(Species)+
summarize(mean = mean(Sepal.Length))
two_num <- df1 %>%
group_by(.$Species)+
summarize(mean = mean(Sepal.Length))
two_num <- df1 %>%
group_by(Species)+
summarize(mean = mean(Sepal.Length))
two_num <- df1 %>%
group_by(Species)+
summarize(mean = mean('Sepal.Length'))
two_num <- df1 %>%
group_by(Species)+
summarize(mean = mean(Sepal.Length))
df1
two_num <- df1 %>%
group_by(Species)+
summarize(mean = mean(Sepal.Length))
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = mean(Sepal.Length))
(two_num <- as.data.frame(two_num))
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = x), color='red')
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = mean), color='red')
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = median(Sepal.Length))
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = median(Sepal.Length)) %>%
as.data.frame()
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = mean), color='red')
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = quantile(Sepal.Length, 75)) %>%
as.data.frame()
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = quantile(Sepal.Length, 0.75)) %>%
as.data.frame()
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = mean), color='red')
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = quantile(Sepal.Length, 1)) %>%
as.data.frame()
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = mean), color='red')
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = quantile(Sepal.Length, 0.25)) %>%
as.data.frame()
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = mean), color='red')
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = quantile(Sepal.Length, 0)) %>%
as.data.frame()
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = mean), color='red')
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = quantile(Sepal.Length, 0.01)) %>%
as.data.frame()
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = mean), color='red')
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = quantile(Sepal.Length, 0.1)) %>%
as.data.frame()
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = mean), color='red')
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = quantile(Sepal.Length, 0.05)) %>%
as.data.frame()
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = mean), color='red')
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = quantile(Sepal.Length, 0.25)) %>%
as.data.frame()
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = mean), color='red')
two_num <- df1 %>%
group_by(Species) %>%
summarize(mean = mean(Sepal.Length)) %>%
as.data.frame()
ggplot(df1, aes(Species, Sepal.Length))+
geom_boxplot()+
stat_summary(fun.data = mean_cl_normal, geom = "errorbar",
width = 0.1)+
stat_summary(fun.y = mean, geom = "point", size = 4)+
geom_hline(data = two_num, aes(yintercept = mean), color='red')
