my_var <- '21 18 21 19 25 20 17 17 18 22 17 18 18 19 19 27 21 20 24 17 15 24 24 29 19 14 21 17 19 18 18 20 21 21 19 19 17 21 13 17 13 23 15 23 24 16 17 25 24 22'
library(stringr)
str_split(my_var, ' ')
my_var <- str_split(my_var, ' ')
my_var
my_var[[1]]
my_var <- my_var[[1]]
mean(my_var)
as.integer(my_var)
my_var <- as.integer(my_var)
mean(my_var)
mean(my_var) + sd(my_var)
my_var < mean(my_var) + sd(my_var)
my_var < mean(my_var) + sd(my_var) & my_var > mean(my_var) - sd(my_var)
my_var[my_var < mean(my_var) + sd(my_var) & my_var > mean(my_var) - sd(my_var)]
library(dplyr)
suppressMessages(library(dplyr))
suppressMessages(library(dplyr))
my_var %>%
c(mean(.) - sd(.), mean(.) + sd(.)) %>%
my_var[my_var > .[1] & my_var < .[2]]
c(mean(.) - sd(.), mean(.) + sd(.)) %>%
print(.)
my_var %>%
c(mean(.) - sd(.), mean(.) + sd(.))
my_var %>%
c(mean(.) - sd(.), mean(.) + sd(.))
my_var %>%
mean()
my_var %>%
mean() + sd()
my_var %>%
mean(.) + sd()
my_var %>%
mean('.') + sd()
my_var %>%
mean('.') + sd()
my_var %>%
mean() + sd(.)
my_var %>%
mean() + sd(.)
my_var %>%
mean() %>%
sd()
my_var %>%
mean() %>%
+ 1
my_var %>%
mean() + sd(my_var)
my_var %>%
c(mean() + sd(my_var), mean(my_var) - sd(my_var))
my_var %>%
c(mean(my_var) + sd(my_var), mean(my_var) - sd(my_var))
my_var %>%
mean(my_var) + sd(my_var)
my_var %>%
mean(my_var) + sd(my_var)
my_var %>%
mean(my_var)
my_var %>%
mean(my_var)
my_var %>%
mean()
df <- read.csv('evals.csv')
head(df,10)
describe(df)
str(df)
as.factor(df$rank)
head(df)
head(df)
head(df)
head(df)
corr(df$rank, df$score)
view(df)
View(df)
View(df, fontsize=14)
View(df)
options()
options(strasfactor)
str(df)
View(str(df))
summary(df)
df[names(df)[1:5]]
head(df[names(df)[1:5]], 10)
df$gender <- as.factor(df$gender)
df_cars <- mtcars
df_cars$gear
df_cars$gear % 2 == 0
df_cars$gear %% 2 == 0
df_cars$gear %% 2
df_cars$gear[df_cars$gear %% 2]
!(df_cars$gear %% 2)
as.integer(!(df_cars$gear %% 2))
df_cars$even_gear <- as.integer(!(df_cars$gear %% 2))
df_cars$gear + 1
(df_cars$gear + 1) %% 2
subset(mtcars, cyl == 4)
subset(mtcars, cyl == 4, mpg)
subset(mtcars, cyl == 4, mpg)[2]
as.vector(subset(mtcars, cyl == 4, mpg))
mtcars[mtcars['cyl'] == 4]
mtcars
mtcars[mtcars['cyl'] == 4]
mtcars['cyl'] == 4
mtcars[['cyl'] == 4
mtcars[['cyl']] == 4
mtcars[mtcars[['cyl']] == 4]
mtcars[mtcars[['cyl']] == 4]['mpg']
mtcars[mtcars[['cyl']] == 4]
mtcars[mtcars['cyl'] == 4]
subset(mtcars, cyl == 4)
subset(mtcars, cyl == 4)[['mpg']]
subset(mtcars, cyl == 4)$mpg
mtcars$new_var <- ifelse(mtcars$carb >= 4 | mtcars$cyl > 6, 1, 0)
mtcars$carb >= 4 | mtcars$cyl > 6
as.integer(mtcars$carb >= 4 | mtcars$cyl > 6)
df <- AirPassengers
str(df)
as_frame(df)
as.data.frame(df)
df
df
df <- AirPassengers
df
df <- AirPassengers
df
as.data.frame(df)
df <- as.data.frame(df)
df
df[1,]
df[2,]
index(df[2,])
which(df[2,])
which(df == df[2,])
df[2:nrow(df),] - df[1:(nrow(df)-1),]
(df[2:nrow(df),] - df[1:(nrow(df)-1),]) > 0
df[2:nrow(df)][(df[2:nrow(df),] - df[1:(nrow(df)-1),]) > 0]
df[2:nrow(df),][(df[2:nrow(df),] - df[1:(nrow(df)-1),]) > 0]
df <- c(23)
df[2:nrow(df),][(df[2:nrow(df),] - df[1:(nrow(df)-1),]) > 0]
df[1:nrow(df),][c(FALSE, (df[2:nrow(df),] - df[1:(nrow(df)-1),]) > 0)]
df <- as.data.frame(AirPassengers)
df[1:nrow(df),][c(FALSE, (df[2:nrow(df),] - df[1:(nrow(df)-1),]) > 0)]
df <- c(54)
df[1:nrow(df),][c(FALSE, (df[2:nrow(df),] - df[1:(nrow(df)-1),]) > 0)]
df[1:nrow(df)]
df[1:nrow(df),]
df[1:2]
df[1:1]
nrow(df)
df[1:NULL]
vect < as.vector(AirPassengers)
vect <- as.vector(AirPassengers)
vect
vect[c(FALSE, (vect[2:length(vect)] - vect[1:(length(vect) - 1)] > 0))]
vect <- c(54)
vect[c(FALSE, (vect[2:length(vect)] - vect[1:(length(vect) - 1)] > 0))]
vect
vect <- as.vector(AirPassengers)
vect
vect[-1][vect[-1] > vect[-length(vect)]]
df <- AirPassengers
mean(df[1:10,])
df <- as.vector(AirPassengers)
mean(df[1:10])
apply(df[5:(len(df)-5)], lambda x: print(x))
lapply(df[5:(len(df)-5)], lambda x: print(x))
lapply(df[5:(len(df)-5)], function(x): print(x))
lapply(df[5:(len(df)-5)], function(x) print(x))
lapply(df[5:(length(df)-5)], function(x) print(x))
i <- 5
for(i, length(df) - 5) {
for(i in 5:(length(df) - 5)) {
print(df[i])
}
for(i in 5:(length(df) - 5)) {
print(df[i-5])
}
df[1]
for(i in 5:(length(df) - 5)) {
print(df[i-6])
}
for(i in 5:(length(df) - 5)) {
print(df[i-6])
}
for(i in 5:(length(df) - 5)) {
print(df[i-6])
}
for(i in 5:(length(df) - 5)) {
print(df[i-4])
}
moving_average <- c()
for(i in 5:(length(df) - 5)) {
moving_average[i-4] <- mean(df[(i-4):(i+5)])
}
moving_average
moving_average <- numeric(135)
for(i in 5:(length(df) - 5)) {
moving_average[i-4] <- mean(df[(i-4):(i+5)])
}
df <- as.vector(AirPassengers)
moving_average <- numeric(135)
i <- 5
for(i in 5:(length(df) - 5)) {
moving_average[i-4] <- mean(df[(i-4):(i+5)])
}
moving_average
cumsum(df)
cumsum(df[1:(length(df)-10)]) - cumsum(df[11:length(df)])
cumsum(df[11:length(df)]) - cumsum(df[1:(length(df)-10)])
length(df)
cumsum(df[10:length(df)]) - cumsum(df[1:(length(df)-9)])
(cumsum(df[10:length(df)]) - cumsum(df[1:(length(df)-9)])) / 10
df <- as.vector(AirPassengers)
moving_average <- numeric(135)
i <- 5
for(i in 5:(length(df) - 5)) {
moving_average[i-4] <- mean(df[(i-4):(i+5)])
}
moving_average
cumsum(df)[10]
cumsum(df)[10]/10
(cumsum(df)[11] - cumsum(df[10:20])[1])/10
cumsum(df)[11]
cumsum(df)[11] - df[10]
cumsum(df)[11] - df[1]
cumsum(df[11:])
cumsum(df[11:length(df)])
cumsum(df[10:length(df)]) - c(0, cumsum(1:(length(df)-10))
)
cumsum(df)[10:length(df)] - c(0, cumsum(1:(length(df)-10)))
cumsum(df)[10:length(df)] - c(0, cumsum(df)[1:(length(df) - 10))]
cumsum(df)[10:length(df)] - c(0, cumsum(df)[1:(length(df) - 10)]
)
(cumsum(df)[10:length(df)] - c(0, cumsum(df)[1:(length(df) - 10)]))/10
(cumsum(df)[10:length(df)] - c(0, cumsum(df)[1:(length(df) - 10)]))/10
(cumsum(df)[10:length(df)] - c(0, cumsum(df)[1:(length(df) - 10)]))/10
df <- as.vector(AirPassengers)
for(i in 5:(length(df) - 5)) {
moving_average[i-4] <- mean(df[(i-4):(i+5)])
}
moving_average
# Для встроенных в R данных AirPassengers рассчитайте
# скользящее среднее с интервалом сглаживания равным 10.
# Напечатайте получившийся результат
# (первым значением в выводе должно быть среднее для элементов 1:10,
#  во втором значении - среднее для элементов 2:11 и т.д., в последнем  -
# среднее для элементов 135 :144)
moving_everage <- function(df, interval) {
(cumsum(df)[interval:length(df)] - c(0, cumsum(df)[1:(length(df) - interval)]))/interval
}
df <- as.vector(AirPassengers)
interval <- 10
moving_average(df, interval)
# Для встроенных в R данных AirPassengers рассчитайте
# скользящее среднее с интервалом сглаживания равным 10.
# Напечатайте получившийся результат
# (первым значением в выводе должно быть среднее для элементов 1:10,
#  во втором значении - среднее для элементов 2:11 и т.д., в последнем  -
# среднее для элементов 135 :144)
moving_average <- function(df, interval) {
(cumsum(df)[interval:length(df)] - c(0, cumsum(df)[1:(length(df) - interval)]))/interval
}
moving_average(df, interval)
interval <- 8
moving_average(df, interval)
interval <- 5
moving_average(df, interval)
interval <- 10
moving_average(df, interval)
